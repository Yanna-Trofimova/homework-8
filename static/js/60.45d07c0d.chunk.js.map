{"version":3,"file":"static/js/60.45d07c0d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/FilterContact/FilterContact.module.css?d984","components/FilterContact/FilterContact.jsx","components/Loader/Loader.js","webpack://react-homework-template/./src/components/Section/Section.module.css?dbe8","components/Section/Section.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/ContactsPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"div\":\"ContactItem_div__0hLLW\",\"btn\":\"ContactItem_btn__1h5dG\"};","import React from 'react';\n// import PropTypes from 'prop-types';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contacts-operation';\n\nimport toast from 'react-hot-toast';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const onDelete = ()=> {\n    dispatch(deleteContact(id))\n    toast.success('Контакт видалено')\n  }\n  \n  return (\n    <>\n      <li>\n        <div className={css.div}>   <p className=\"TodoList__text\"><span className={css.contactName} >{name}</span> :  {number}</p>\n          <button\n            className={css.btn}\n            type=\"button\"\n            onClick={onDelete}\n            \n          >\n            Видалити\n          </button>\n          </div>\n        </li>\n    </>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"form\":\"ContactList_form__YbZHX\"};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.phonebook.items;\nexport const selectError = state => state.phonebook.error;\nexport const selectIsLoading = state => state.phonebook.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFiltredContacts = createSelector (\n    [selectContacts, selectFilter], (contacts, filter )=> contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n)\n)\n","import React from 'react';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport { selectFiltredContacts } from 'redux/contacts/contacts-selectors';\n\n\nexport const ContactList = () => {\n  const FiltredContacts = useSelector(selectFiltredContacts);\n\n  return (\n    <ul className={css.form}>\n      {FiltredContacts.map(({ name, number, id }) => (\n        // <li className={css.list} key={id}>\n          <ContactItem key={id} name={name} number={number} id={id}/>\n        // </li>\n      ))}\n    </ul>\n  );\n};\n\n\nContactList.propType = {\n  contacts: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"div\":\"FilterContact_div__-3Tjz\",\"input\":\"FilterContact_input__2bP0L\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/contacts-selectors';\nimport { updateFilter } from 'redux/filter/filter-slice';\nimport css from './FilterContact.module.css';\n\nexport const FilterContact = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n \n\n\n  return (\n    <div className={css.div}>\n   \n      \n       <label >\n            Find contacts by name\n            <input className={css.input} type=\"text\" name=\"filter\" value={filter}\n            onChange={event => dispatch(updateFilter(event.target.value))}/>\n        </label>\n    </div>\n  );\n};\n\n","import { Oval } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    // <div style={{margin: 'auto',\n    // textAlign: 'center',}}>\n    //    <ThreeDots\n    //   height=\"50\"\n    //   width=\"80\"\n    //   radius=\"5\"\n    //   color=\"#4fa94d\"\n    //   ariaLabel=\"three-dots-loading\"\n    //   wrapperStyle={{}}\n    //   wrapperClassName=\"\"\n    //   visible={true}\n    // />\n    // </div>\n    <div >\n      <Oval\n        height={40}\n        width={40}\n        color=\"red\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n        ariaLabel=\"oval-loading\"\n        secondaryColor=\"#b8556c\"\n        strokeWidth={2}\n        strokeWidthSecondary={2}\n      />\n    </div>\n    \n    \n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Section_title__SLHvV\"};","import css from './Section.module.css';\nimport PropTypes from 'prop-types';\n\nexport const Section = ({title, children}) => {\n    return (\n        <>\n        {title && <h1 className={css.title}>{title}</h1>}\n        {children}\n        </>\n    )\n}\nSection.propType ={\n    title:PropTypes.string.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"ContactForm_btn__wll+u\",\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\"};","import { nanoid } from 'nanoid';\nimport { useState } from 'react';\n// import Notiflix from 'notiflix';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operation';\nimport { selectContacts } from 'redux/contacts/contacts-selectors';\n// import Button from '@mui/material/Button';\n// import TextField from '@mui/material/TextField';\nimport css from './ContactForm.module.css';\nimport toast from 'react-hot-toast';\n\n\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  // const nameId = nanoid();\n  // const numberId = nanoid();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),) ?\n        toast.error(`Ім'я: ${name} вже записане у контактну книгу`) :\n        dispatch(addContact({ name, number, id: nanoid() }))&&\n        toast.success(`Новий контак додано`)&&\n        resetForm();\n     \n    }\n\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n\nreturn (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input className={css.input} type=\"text\" name=\"name\"   value={name}  onChange={handleChange} />\n\n      <input className={css.input}  type=\"tel\" name=\"number\"   value={number}  onChange={handleChange} />\n\n      <button className={css.btn}  type=\"submit\" >\n        Add contact \n      </button>\n    </form>\n  );\n};\n\n\n","import React from 'react';\n\nimport { ContactList } from 'components/ContactList/ContactList'\nimport { FilterContact } from 'components/FilterContact/FilterContact';\nimport {Loader} from 'components/Loader/Loader';\nimport { Section } from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/contacts/contacts-selectors';\nimport { fetchContacts } from 'redux/contacts/contacts-operation';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\n// import css from './App.module.css';\n\nexport default function Contacts () {\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div >\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n     {contacts.length > 0 && (\n        <Section title=\"Contacts\">\n          <FilterContact />\n          <ContactList/>\n          {isLoading && !error && <Loader/> } \n        </Section>\n      )}\n    </div>\n  );\n};\n"],"names":["ContactItem","name","number","id","dispatch","useDispatch","className","css","type","onClick","deleteContact","toast","selectContacts","state","phonebook","items","selectError","error","selectIsLoading","isLoading","selectFilter","filter","selectFiltredContacts","createSelector","contacts","contact","toLowerCase","includes","ContactList","FiltredContacts","useSelector","map","propType","PropTypes","isRequired","FilterContact","value","onChange","event","updateFilter","target","Loader","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Section","title","children","ContactForm","useState","setName","setNumber","handleChange","resetForm","onSubmit","e","preventDefault","find","addContact","nanoid","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}